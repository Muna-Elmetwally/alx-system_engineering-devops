#!/usr/bin/env bash
# Install nginx on your web-01
# server
# Nginx should be listening on port 80
# When querying Nginx at its root / with a GET request
# (requesting a page) using curl,
# it must return a page that contains the string Hello World!

# Bash script that configures a new Ubuntu machine
# to respect above requirements (this script will be run on the server itself)
# You canâ€™t use systemctl for restarting nginx

# Update package lists to get the latest versions of packages
apt-get update

# Check if nginx is not installed by verifying if its executable is not found
if ! [ -x "$(command -v nginx)" ]; then

  # Install nginx package silently (-y) without prompting for confirmation
  apt-get install -y nginx
fi

# Allow incoming HTTP traffic through the firewall for Nginx
ufw allow 'Nginx HTTP'

# Write "Hello World!" to the default HTML file served by Nginx
echo "Hello World!" > /var/www/html/index.nginx-debian.html

# Configure your Nginx server so that /redirect_me is redirecting to another page.
sudo sed -i "/server_name _;/a \    location /redirect_me {\n        return 301 https://www.youtube.com/watch?v=QH2-TGUlwu4;\n    }" /etc/nginx/sites-available/default

# Configure your Nginx server to have a custom 404 page
# that contains the string Ceci n'est pas une page.
echo "Ceci n'est pas une page" >> /var/www/html/error_404.html

# Check if custom configuration already exists in Nginx server configuration
if ! grep -q "error_page 404 /error_404.html;" /etc/nginx/sites-available/default; then
  # Modify the Nginx default server configuration
  sudo sed -i '/server_name _;/a \
          error_page 404 /error_404.html;\n \
          location = /error_404.html {\n \
              root /var/www/html;\n \
          }\n' /etc/nginx/sites-available/default
fi 

# Start the Nginx service
service nginx start